import logo from './logo.svg';
import './App.css';
import { useEffect, useState } from 'react';
import axios from 'axios';
import { FaEdit } from "react-icons/fa";
import { FaTrash } from "react-icons/fa";
function App() {
  const [users,setUser] = useState()
  const [editUser,setEditUser] = useState()
  const [name,setName] = useState('');
  const [email,setEmail] = useState('');
  const [age,setAge] = useState('');
  const fetchData = async () => {
     const response = await axios.get("http://localhost:5000/users")
     if(response.status === 200){
      setUser(response.data)
     }
  }

  useEffect(()=>{
      fetchData()
  },[!users])

  useEffect(() => {
    if (editUser) {
      setName(editUser.name);
      setEmail(editUser.email);
      setAge(editUser.age)
    }
  }, [editUser]);

 

  const saveUser = async (e) => {
    e.preventDefault()
     const response = await axios.post("http://localhost:5000/user",{
      "name":name,
      "email":email,
      "age":age
     }
    )
    if(response.status === 200){
      alert("data saved")
        setUser(null)
        fetchData()
    }
    else{
      alert("data not saved")
    }
  }

  const updateUser = async (e) => {
    e.preventDefault()
     const response = await axios.put(`http://localhost:5000/user/${editUser._id}`,{
      "name":name,
      "email":email,
      "age":age
     }
    )
    if(response.status === 200){
      alert("data updated")
        setUser(null)
        fetchData()
        setEditUser(null)
       
    }
    else{
      alert("data not update")
    }
  }

  const deleteUser = async (id) => {
    console.log(id)
    const response = await axios.delete(
      `http://localhost:5000/user/${id}`
    )
    if(response.status === 200){
      alert("deleted")
      setUser(null)
      fetchData()
    }
  }


  return (
    <div className="App">

  

<form 
onSubmit={ editUser ? updateUser : saveUser}
class="max-w-sm mx-auto">

<h1 className='font-bold text-xl mt-4 mb-4'>
   { editUser ? `Edit User : ${editUser.name}` : "Create User" } 
  </h1>

<div class="mb-5">
    <label for="email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Your name</label>
    <input type="text"
    value={name} 
    onChange={(e)=>  setName(e.currentTarget.value)}
    id="name" class="bg-gray-50 border border-gray-300 text-gray-900
     text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block
      w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400
       dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
        placeholder="name" required />
  </div>
  <div class="mb-5">
    <label for="email" 
    
    class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Your email</label>
    <input 
    value={email}
     onChange={(e)=>setEmail(e.currentTarget.value)}
    type="email" id="email" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="name@flowbite.com" required />
  </div>
  <div class="mb-5">
    <label for="age"
   
    class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Your age</label>
    <input
    value={age}
      onChange={(e)=>setAge(e.currentTarget.value)}
    type="number" id="age" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" required />
  </div>
  
  <button class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
    {editUser ? "Update" : "Create"}
  </button>
</form>
  

<div class="relative overflow-x-auto">
    <table class="w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400">
        <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
            <tr>
            <th scope="col" class="px-6 py-3">
                    #
                </th>
                <th scope="col" class="px-6 py-3">
                     name
                </th>
                <th scope="col" class="px-6 py-3">
                    email
                </th>
                <th scope="col" class="px-6 py-3">
                    age
                </th>
                <th scope="col" class="px-6 py-3">
                    actions
                </th>
            </tr>
        </thead>
        <tbody>
          {users ? users.map((d,index)=>{ 
            return (
            <tr class="bg-white border-b dark:bg-gray-800 dark:border-gray-700">
                <td class="px-6 py-4">
                {index + 1}
                </td>
                <th scope="row" class="px-6 py-4 font-medium text-gray-900 whitespace-nowrap dark:text-white">
                {d.name}
                </th>
                <td class="px-6 py-4">
                {d.email}
                </td>
                <td class="px-6 py-4">
                {d.age}
                </td>
                <td class="px-6 py-4 flex space-x-2 cursor-pointer">
                <FaEdit 
                onClick={()=>setEditUser(d)}
                />
                <FaTrash color='red' 
                onClick={()=>deleteUser(d._id)}
                />
                </td>
            </tr>
            )
          }) : "Loading"}
        </tbody>
    </table>
</div>

    </div>
  );
}

export default App;
